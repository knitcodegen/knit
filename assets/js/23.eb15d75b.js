(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{420:function(e,t,n){"use strict";n.r(t);var s=n(56),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"integer-slice-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#integer-slice-functions"}},[e._v("#")]),e._v(" Integer Slice Functions")]),e._v(" "),n("h2",{attrs:{id:"until"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#until"}},[e._v("#")]),e._v(" until")]),e._v(" "),n("p",[e._v("The "),n("code",[e._v("until")]),e._v(" function builds a range of integers.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("until 5\n")])])]),n("p",[e._v("The above generates the list "),n("code",[e._v("[0, 1, 2, 3, 4]")]),e._v(".")]),e._v(" "),n("p",[e._v("This is useful for looping with "),n("code",[e._v("range $i, $e := until 5")]),e._v(".")]),e._v(" "),n("h2",{attrs:{id:"untilstep"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#untilstep"}},[e._v("#")]),e._v(" untilStep")]),e._v(" "),n("p",[e._v("Like "),n("code",[e._v("until")]),e._v(", "),n("code",[e._v("untilStep")]),e._v(" generates a list of counting integers. But it allows\nyou to define a start, stop, and step:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("untilStep 3 6 2\n")])])]),n("p",[e._v("The above will produce "),n("code",[e._v("[3 5]")]),e._v(" by starting with 3, and adding 2 until it is equal\nor greater than 6. This is similar to Python's "),n("code",[e._v("range")]),e._v(" function.")]),e._v(" "),n("h2",{attrs:{id:"seq"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#seq"}},[e._v("#")]),e._v(" seq")]),e._v(" "),n("p",[e._v("Works like the bash "),n("code",[e._v("seq")]),e._v(" command.")]),e._v(" "),n("ul",[n("li",[e._v("1 parameter  (end) - will generate all counting integers between 1 and "),n("code",[e._v("end")]),e._v(" inclusive.")]),e._v(" "),n("li",[e._v("2 parameters (start, end) - will generate all counting integers between "),n("code",[e._v("start")]),e._v(" and "),n("code",[e._v("end")]),e._v(" inclusive incrementing or decrementing by 1.")]),e._v(" "),n("li",[e._v("3 parameters (start, step, end) - will generate all counting integers between "),n("code",[e._v("start")]),e._v(" and "),n("code",[e._v("end")]),e._v(" inclusive incrementing or decrementing by "),n("code",[e._v("step")]),e._v(".")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("seq 5       => 1 2 3 4 5\nseq -3      => 1 0 -1 -2 -3\nseq 0 2     => 0 1 2\nseq 2 -2    => 2 1 0 -1 -2\nseq 0 2 10  => 0 2 4 6 8 10\nseq 0 -2 -5 => 0 -2 -4\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);