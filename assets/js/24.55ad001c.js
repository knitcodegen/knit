(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{421:function(e,t,s){"use strict";s.r(t);var a=s(56),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"lists-and-list-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lists-and-list-functions"}},[e._v("#")]),e._v(" Lists and List Functions")]),e._v(" "),s("p",[e._v("Sprig provides a simple "),s("code",[e._v("list")]),e._v(" type that can contain arbitrary sequential lists\nof data. This is similar to arrays or slices, but lists are designed to be used\nas immutable data types.")]),e._v(" "),s("p",[e._v("Create a list of integers:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$myList := list 1 2 3 4 5\n")])])]),s("p",[e._v("The above creates a list of "),s("code",[e._v("[1 2 3 4 5]")]),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"first-mustfirst"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#first-mustfirst"}},[e._v("#")]),e._v(" first, mustFirst")]),e._v(" "),s("p",[e._v("To get the head item on a list, use "),s("code",[e._v("first")]),e._v(".")]),e._v(" "),s("p",[s("code",[e._v("first $myList")]),e._v(" returns "),s("code",[e._v("1")])]),e._v(" "),s("p",[s("code",[e._v("first")]),e._v(" panics if there is a problem while "),s("code",[e._v("mustFirst")]),e._v(" returns an error to the\ntemplate engine if there is a problem.")]),e._v(" "),s("h2",{attrs:{id:"rest-mustrest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rest-mustrest"}},[e._v("#")]),e._v(" rest, mustRest")]),e._v(" "),s("p",[e._v("To get the tail of the list (everything but the first item), use "),s("code",[e._v("rest")]),e._v(".")]),e._v(" "),s("p",[s("code",[e._v("rest $myList")]),e._v(" returns "),s("code",[e._v("[2 3 4 5]")])]),e._v(" "),s("p",[s("code",[e._v("rest")]),e._v(" panics if there is a problem while "),s("code",[e._v("mustRest")]),e._v(" returns an error to the\ntemplate engine if there is a problem.")]),e._v(" "),s("h2",{attrs:{id:"last-mustlast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#last-mustlast"}},[e._v("#")]),e._v(" last, mustLast")]),e._v(" "),s("p",[e._v("To get the last item on a list, use "),s("code",[e._v("last")]),e._v(":")]),e._v(" "),s("p",[s("code",[e._v("last $myList")]),e._v(" returns "),s("code",[e._v("5")]),e._v(". This is roughly analogous to reversing a list and\nthen calling "),s("code",[e._v("first")]),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"initial-mustinitial"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initial-mustinitial"}},[e._v("#")]),e._v(" initial, mustInitial")]),e._v(" "),s("p",[e._v("This compliments "),s("code",[e._v("last")]),e._v(" by returning all "),s("em",[e._v("but")]),e._v(" the last element.\n"),s("code",[e._v("initial $myList")]),e._v(" returns "),s("code",[e._v("[1 2 3 4]")]),e._v(".")]),e._v(" "),s("p",[s("code",[e._v("initial")]),e._v(" panics if there is a problem while "),s("code",[e._v("mustInitial")]),e._v(" returns an error to the\ntemplate engine if there is a problem.")]),e._v(" "),s("h2",{attrs:{id:"append-mustappend"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#append-mustappend"}},[e._v("#")]),e._v(" append, mustAppend")]),e._v(" "),s("p",[e._v("Append a new item to an existing list, creating a new list.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$new = append $myList 6\n")])])]),s("p",[e._v("The above would set "),s("code",[e._v("$new")]),e._v(" to "),s("code",[e._v("[1 2 3 4 5 6]")]),e._v(". "),s("code",[e._v("$myList")]),e._v(" would remain unaltered.")]),e._v(" "),s("p",[s("code",[e._v("append")]),e._v(" panics if there is a problem while "),s("code",[e._v("mustAppend")]),e._v(" returns an error to the\ntemplate engine if there is a problem.")]),e._v(" "),s("h2",{attrs:{id:"prepend-mustprepend"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prepend-mustprepend"}},[e._v("#")]),e._v(" prepend, mustPrepend")]),e._v(" "),s("p",[e._v("Push an element onto the front of a list, creating a new list.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("prepend $myList 0\n")])])]),s("p",[e._v("The above would produce "),s("code",[e._v("[0 1 2 3 4 5]")]),e._v(". "),s("code",[e._v("$myList")]),e._v(" would remain unaltered.")]),e._v(" "),s("p",[s("code",[e._v("prepend")]),e._v(" panics if there is a problem while "),s("code",[e._v("mustPrepend")]),e._v(" returns an error to the\ntemplate engine if there is a problem.")]),e._v(" "),s("h2",{attrs:{id:"concat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concat"}},[e._v("#")]),e._v(" concat")]),e._v(" "),s("p",[e._v("Concatenate arbitrary number of lists into one.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("concat $myList ( list 6 7 ) ( list 8 )\n")])])]),s("p",[e._v("The above would produce "),s("code",[e._v("[1 2 3 4 5 6 7 8]")]),e._v(". "),s("code",[e._v("$myList")]),e._v(" would remain unaltered.")]),e._v(" "),s("h2",{attrs:{id:"reverse-mustreverse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reverse-mustreverse"}},[e._v("#")]),e._v(" reverse, mustReverse")]),e._v(" "),s("p",[e._v("Produce a new list with the reversed elements of the given list.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("reverse $myList\n")])])]),s("p",[e._v("The above would generate the list "),s("code",[e._v("[5 4 3 2 1]")]),e._v(".")]),e._v(" "),s("p",[s("code",[e._v("reverse")]),e._v(" panics if there is a problem while "),s("code",[e._v("mustReverse")]),e._v(" returns an error to the\ntemplate engine if there is a problem.")]),e._v(" "),s("h2",{attrs:{id:"uniq-mustuniq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uniq-mustuniq"}},[e._v("#")]),e._v(" uniq, mustUniq")]),e._v(" "),s("p",[e._v("Generate a list with all of the duplicates removed.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("list 1 1 1 2 | uniq\n")])])]),s("p",[e._v("The above would produce "),s("code",[e._v("[1 2]")])]),e._v(" "),s("p",[s("code",[e._v("uniq")]),e._v(" panics if there is a problem while "),s("code",[e._v("mustUniq")]),e._v(" returns an error to the\ntemplate engine if there is a problem.")]),e._v(" "),s("h2",{attrs:{id:"without-mustwithout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#without-mustwithout"}},[e._v("#")]),e._v(" without, mustWithout")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("without")]),e._v(" function filters items out of a list.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("without $myList 3\n")])])]),s("p",[e._v("The above would produce "),s("code",[e._v("[1 2 4 5]")])]),e._v(" "),s("p",[e._v("Without can take more than one filter:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("without $myList 1 3 5\n")])])]),s("p",[e._v("That would produce "),s("code",[e._v("[2 4]")])]),e._v(" "),s("p",[s("code",[e._v("without")]),e._v(" panics if there is a problem while "),s("code",[e._v("mustWithout")]),e._v(" returns an error to the\ntemplate engine if there is a problem.")]),e._v(" "),s("h2",{attrs:{id:"has-musthas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#has-musthas"}},[e._v("#")]),e._v(" has, mustHas")]),e._v(" "),s("p",[e._v("Test to see if a list has a particular element.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("has 4 $myList\n")])])]),s("p",[e._v("The above would return "),s("code",[e._v("true")]),e._v(", while "),s("code",[e._v('has "hello" $myList')]),e._v(" would return false.")]),e._v(" "),s("p",[s("code",[e._v("has")]),e._v(" panics if there is a problem while "),s("code",[e._v("mustHas")]),e._v(" returns an error to the\ntemplate engine if there is a problem.")]),e._v(" "),s("h2",{attrs:{id:"compact-mustcompact"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compact-mustcompact"}},[e._v("#")]),e._v(" compact, mustCompact")]),e._v(" "),s("p",[e._v("Accepts a list and removes entries with empty values.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('$list := list 1 "a" "foo" ""\n$copy := compact $list\n')])])]),s("p",[s("code",[e._v("compact")]),e._v(' will return a new list with the empty (i.e., "") item removed.')]),e._v(" "),s("p",[s("code",[e._v("compact")]),e._v(" panics if there is a problem and "),s("code",[e._v("mustCompact")]),e._v(" returns an error to the\ntemplate engine if there is a problem.")]),e._v(" "),s("h2",{attrs:{id:"slice-mustslice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice-mustslice"}},[e._v("#")]),e._v(" slice, mustSlice")]),e._v(" "),s("p",[e._v("To get partial elements of a list, use "),s("code",[e._v("slice list [n] [m]")]),e._v(". It is\nequivalent of "),s("code",[e._v("list[n:m]")]),e._v(".")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("slice $myList")]),e._v(" returns "),s("code",[e._v("[1 2 3 4 5]")]),e._v(". It is same as "),s("code",[e._v("myList[:]")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("slice $myList 3")]),e._v(" returns "),s("code",[e._v("[4 5]")]),e._v(". It is same as "),s("code",[e._v("myList[3:]")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("slice $myList 1 3")]),e._v(" returns "),s("code",[e._v("[2 3]")]),e._v(". It is same as "),s("code",[e._v("myList[1:3]")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("slice $myList 0 3")]),e._v(" returns "),s("code",[e._v("[1 2 3]")]),e._v(". It is same as "),s("code",[e._v("myList[:3]")]),e._v(".")])]),e._v(" "),s("p",[s("code",[e._v("slice")]),e._v(" panics if there is a problem while "),s("code",[e._v("mustSlice")]),e._v(" returns an error to the\ntemplate engine if there is a problem.")]),e._v(" "),s("h2",{attrs:{id:"chunk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chunk"}},[e._v("#")]),e._v(" chunk")]),e._v(" "),s("p",[e._v("To split a list into chunks of given size, use "),s("code",[e._v("chunk size list")]),e._v(". This is useful for pagination.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("chunk 3 (list 1 2 3 4 5 6 7 8)\n")])])]),s("p",[e._v("This produces list of lists "),s("code",[e._v("[ [ 1 2 3 ] [ 4 5 6 ] [ 7 8 ] ]")]),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"a-note-on-list-internals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#a-note-on-list-internals"}},[e._v("#")]),e._v(" A Note on List Internals")]),e._v(" "),s("p",[e._v("A list is implemented in Go as a "),s("code",[e._v("[]interface{}")]),e._v(". For Go developers embedding\nSprig, you may pass "),s("code",[e._v("[]interface{}")]),e._v(" items into your template context and be\nable to use all of the "),s("code",[e._v("list")]),e._v(" functions on those items.")])])}),[],!1,null,null,null);t.default=i.exports}}]);